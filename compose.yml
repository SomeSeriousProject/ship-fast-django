services:
  app:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app
      - dev-static-data:/vol/web
    command: >
      sh -c "python manage.py wait_for_db
            python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/1
    depends_on:
      - db
      - redis

  celery:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    volumes:
      - ./src:/app
      - dev-static-data:/vol/web
    command: celery -A config worker -l INFO
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/1
    depends_on:
      - db
      - redis
      - app

  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  redis:
    image: redis:7-alpine

volumes:
  dev-static-data:
