services:
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    restart: always
    volumes:
      - ../app:/app
      - static-data:/vol/web
    env_file:
      - ../.env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/1
    depends_on:
      - db
      - redis

  celery:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    restart: always
    volumes:
      - ../app:/app
      - static-data:/vol/web
    command: celery -A config worker -l INFO
    env_file:
      - ../.env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/1
    depends_on:
      - db
      - redis
      - app

  db:
    image: postgres:13-alpine
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  redis:
    image: redis:7-alpine

  proxy:
    build:
      context: ../proxy
    restart: always
    depends_on:
      - app
      - celery
    ports:
      - 8000:8000
    volumes:
      - static-data:/vol/static

volumes:
  db-data:
  static-data:
